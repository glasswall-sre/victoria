:mod:`victoria.storage.azure_provider`
======================================

.. py:module:: victoria.storage.azure_provider

.. autoapi-nested-parse::

   victoria.storage.azure_provider

   Implementation of a StorageProvider for Azure Blob Storage.

   Author:
       Sam Gibson



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   victoria.storage.azure_provider.AzureStorageProvider



.. py:class:: AzureStorageProvider(container: str, auth_via_cli: bool = False, account_name: str = '', connection_string: str = '')

   Bases: :class:`victoria.storage.provider.StorageProvider`

   Storage provider for Azure Blob Storage.

   .. attribute:: main_client

      The Azure blob service client.

      :type: BlobServiceClient

   .. attribute:: client

      The Azure API blob client.

      :type: ContainerClient

   :param container: The storage container to use.
   :type container: str
   :param auth_via_cli: Whether we should authenticate via the Azure CLI.
   :type auth_via_cli: bool
   :param account_name: The name of the storage account. Only used if auth via CLI.
   :type account_name: str
   :param connection_string: The connection string to the Azure Storage account. Only used if not auth via CLI.
   :type connection_string: str

   .. method:: store(self, data: Union[IOBase, str, bytes], key: str) -> None

      Store a piece of data at a given key in blob storage.

      :param data: The data to store.
      :param key: The path within the container to store it in.


   .. method:: retrieve(self, key: str, stream: IOBase)

      Retrieve a piece of data from a given key in blob storage.

      :param key: The key within the container to get the data from.
      :param stream: The stream to stream the data into.


   .. method:: ls(self) -> Generator[str, None, None]

      List blobs within a container.

      :Yields: *str* -- The names of blobs within the container.



